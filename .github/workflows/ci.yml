name: CI

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "assets/**"
      - ".github/workflows/ci.yaml"
      - "Cargo.toml"
      - "Cargo.lock"
  pull_request:
    branches: [main]
    paths:
      - "src/**"
      - "assets/**"
      - ".github/workflows/ci.yaml"
      - "Cargo.toml"
      - "Cargo.lock"

env:
  CARGO_TERM_COLOR: always

jobs:
  # Run cargo test
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - name: Restore build artifacts cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "cargo-test"
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libwayland-dev libxkbcommon-dev
      - name: Run cargo test
        run: cargo test

  # Run cargo clippy -- -D warnings
  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Restore build artifacts cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "cargo-clippy"
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
